{"version":3,"sources":["components/Display.js","components/Calculator.js","App.js","index.js"],"names":["CalculatorDisplay","value","maxPrecision","pointAt","indexOf","decimalValue","substring","evaluate","length","precisionWithFraction","formattedValue","parseFloat","toLocaleString","undefined","minimumFractionDigits","scientificNotation","toExponential","scaleDown","className","style","transform","Calculator","useState","displayValue","setDisplayValue","operator","setOperator","waitingForOperand","setWaitingForOperand","firstOperand","setFirstOperand","clearAll","setClearAll","handleFunctionKey","newKeyValue","console","log","newDisplayValue","toPrecision","handlePlusMinusToggle","needPoint","handlePoint","handlePercentage","handleKeyPress","handleClick","e","handleNewKey","target","isDigit","includes","isOperator","handleDigit","stringToEvaluate","newOperator","handleOperator","Display","id","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e992ba3b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { evaluate } from 'mathjs';\r\n\r\nconst CalculatorDisplay = ({ value, maxPrecision }) => {\r\n    const pointAt = `${value}`.indexOf('.');\r\n    const decimalValue = value.substring(pointAt, evaluate(value.length));\r\n    const precisionWithFraction = (pointAt === -1) ? 0 : evaluate(decimalValue.length - 1);\r\n\r\n    let formattedValue = parseFloat(value).toLocaleString(undefined, { minimumFractionDigits: precisionWithFraction });\r\n    let scientificNotation = parseFloat(value).toExponential(maxPrecision - 4);\r\n\r\n    const maxCharsAtFullSize = 6;\r\n    const scaleFactor = 'scale(0.36)';\r\n    const scaleDown = (`${formattedValue}`.length) > maxCharsAtFullSize ? scaleFactor : 'scale(1)';\r\n\r\n    if (formattedValue === 'NaN') {\r\n        formattedValue = 'Error';\r\n        return;\r\n    }\r\n\r\n    if (formattedValue.length > 15) {\r\n        formattedValue = scientificNotation;\r\n    }\r\n\r\n    if (scientificNotation.substring(scientificNotation.length - 3, scientificNotation.length) === 'e+0') { // if exponent part is not needed\r\n        scientificNotation = parseFloat(value).toExponential(maxPrecision - 1);\r\n        scientificNotation = scientificNotation.substring(0, scientificNotation.length - 3);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"calculator-display\">\r\n            <div className=\"auto-scaling-text\" style={{ transform: scaleDown }}>\r\n                {formattedValue}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalculatorDisplay;","import React, { useState } from 'react';\r\nimport { evaluate } from 'mathjs';\r\nimport Display from './Display';\r\n\r\n/* Components */\r\nconst Calculator = () => {\r\n    const [displayValue, setDisplayValue] = useState('0');\r\n    const [operator, setOperator] = useState(null);\r\n    const [waitingForOperand, setWaitingForOperand] = useState(false);\r\n    const [firstOperand, setFirstOperand] = useState('0');\r\n    const [clearAll, setClearAll] = useState(true);\r\n    const maxPrecision = 16;\r\n\r\n    const handleDigit = (newKeyValue) => {\r\n        if (waitingForOperand) {\r\n            setDisplayValue(`${newKeyValue}`);\r\n            setWaitingForOperand(false);\r\n            setClearAll(false);\r\n            console.log(displayValue, waitingForOperand, clearAll)\r\n        } else {\r\n            const newDisplayValue = (displayValue === '0') ? `${newKeyValue}` : `${(displayValue)}${newKeyValue}`; //no leading zero\r\n            setDisplayValue(`${newDisplayValue}`);\r\n            setWaitingForOperand(false);\r\n            setClearAll(false);\r\n        }\r\n    }\r\n\r\n    const handleOperator = (newKeyValue) => {\r\n        if (firstOperand === '0' || operator == null || waitingForOperand) {\r\n            setDisplayValue(`${displayValue}${newKeyValue}`)\r\n            setWaitingForOperand(true);\r\n            setFirstOperand(displayValue);\r\n            setOperator(newKeyValue);\r\n            setClearAll(false);\r\n            console.log('here');\r\n            return;\r\n        };\r\n\r\n        const stringToEvaluate = `${firstOperand}${operator}${displayValue}`;\r\n        console.log(stringToEvaluate)\r\n        const newDisplayValue = `${evaluate(stringToEvaluate)}`;\r\n\r\n        if (newDisplayValue === \"Infinity\") {\r\n            setDisplayValue('Error');\r\n        };\r\n\r\n        const newOperator = (newKeyValue === \"=\") ? null : newKeyValue;\r\n        setDisplayValue(`${newDisplayValue}`);\r\n        setWaitingForOperand(true);\r\n        setFirstOperand(`${newDisplayValue}`);\r\n        setOperator(newOperator);\r\n        setClearAll(false);\r\n    };\r\n\r\n    const handlePoint = (newKeyValue) => {\r\n        const needPoint = `${displayValue}`.indexOf('.') === -1 ? true : false;\r\n\r\n        if (waitingForOperand) {\r\n            setDisplayValue('0');\r\n            setWaitingForOperand(false);\r\n            setClearAll(false);\r\n            return;\r\n        };\r\n\r\n        if (needPoint) {\r\n            setDisplayValue(`${displayValue}${newKeyValue}`);\r\n            setWaitingForOperand(false);\r\n            setClearAll(false);\r\n        };\r\n    }\r\n\r\n    // TODO: Fix Percentage.\r\n    const handlePercentage = () => {\r\n        const newDisplayValue = parseFloat(displayValue).toPrecision(maxPrecision) / 100;\r\n\r\n        setDisplayValue(`${newDisplayValue}`);\r\n        setWaitingForOperand(false);\r\n        setClearAll(false);\r\n    }\r\n\r\n    const handlePlusMinusToggle = () => {\r\n        const newDisplayValue = parseFloat(displayValue).toPrecision(maxPrecision) * -1\r\n\r\n        setDisplayValue(`${newDisplayValue}`);\r\n        setWaitingForOperand(false);\r\n        setClearAll(false);\r\n    }\r\n\r\n    const handleClear = () => {\r\n        console.log('clearAll', clearAll);\r\n        if (clearAll) {\r\n            setDisplayValue('0');\r\n            setFirstOperand('0');\r\n            setOperator(null);\r\n            setWaitingForOperand(false);\r\n            setClearAll(true);\r\n        } else {\r\n            setDisplayValue('0');\r\n            setClearAll(true);\r\n        }\r\n    }\r\n\r\n\r\n    const handleKeyPress = (newKeyValue) => {\r\n        /* Don't do anything, just write to the console. */\r\n        console.log('Input Value: ', newKeyValue);\r\n    }\r\n\r\n    const handleFunctionKey = (newKeyValue) => {\r\n        switch (newKeyValue) {\r\n            case \"C\":\r\n                handleClear(newKeyValue);\r\n                break;\r\n            case \"±\":\r\n                handlePlusMinusToggle(newKeyValue);\r\n                break;\r\n            case \".\":\r\n                handlePoint(newKeyValue);\r\n                break;\r\n            case \"%\":\r\n                handlePercentage(newKeyValue);\r\n                break;\r\n            default:\r\n                handleKeyPress(newKeyValue);\r\n        }\r\n    }\r\n\r\n\r\n    const handleClick = (e) => {\r\n        handleNewKey(`${e.target.value}`);\r\n    }\r\n\r\n    const handleNewKey = (newKeyValue) => {\r\n        const digits = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\r\n        const operators = ['/', '*', '-', '+', '='];\r\n\r\n        const isDigit = digits.includes(newKeyValue);\r\n        const isOperator = operators.includes(newKeyValue);\r\n\r\n        if (isDigit) {\r\n            handleDigit(newKeyValue);\r\n        }\r\n        if (isOperator) {\r\n            handleOperator(newKeyValue);\r\n        } else {\r\n            handleFunctionKey(newKeyValue);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calculator\">\r\n            <Display value={displayValue} maxPrecision={maxPrecision} />\r\n\r\n            <div className=\"calculator-keypad\">\r\n                <div className=\"input-keys\">\r\n                    <div className=\"function-keys\">\r\n                        <button id=\"key-clear\" value=\"C\" className=\"calculator-key key-clear\" onClick={handleClick}>{clearAll ? 'AC' : 'C'}</button>\r\n                        <button id=\"key-sign\" value=\"±\" className=\"calculator-key key-sign\" onClick={handleClick}>&plusmn;</button>\r\n                        {/* <button id=\"key-percent\" value=\"%\" className=\"calculator-key key-percent\" onClick={handleClick}>%</button> */}\r\n                    </div>\r\n\r\n                    <div className=\"digit-keys\">\r\n                        <button id=\"key-0\" value=\"0\" className=\"calculator-key key-0\" onClick={handleClick}>0</button>\r\n                        <button id=\"key-dot\" value=\".\" className=\"calculator-key key-dot\" onClick={handleClick}>&middot;</button>\r\n                        <button id=\"key-1\" value=\"1\" className=\"calculator-key key-1\" onClick={handleClick}>1</button>\r\n                        <button id=\"key-2\" value=\"2\" className=\"calculator-key key-2\" onClick={handleClick}>2</button>\r\n                        <button id=\"key-3\" value=\"3\" className=\"calculator-key key-3\" onClick={handleClick}>3</button>\r\n                        <button id=\"key-4\" value=\"4\" className=\"calculator-key key-4\" onClick={handleClick}>4</button>\r\n                        <button id=\"key-5\" value=\"5\" className=\"calculator-key key-5\" onClick={handleClick}>5</button>\r\n                        <button id=\"key-6\" value=\"6\" className=\"calculator-key key-6\" onClick={handleClick}>6</button>\r\n                        <button id=\"key-7\" value=\"7\" className=\"calculator-key key-7\" onClick={handleClick}>7</button>\r\n                        <button id=\"key-8\" value=\"8\" className=\"calculator-key key-8\" onClick={handleClick}>8</button>\r\n                        <button id=\"key-9\" value=\"9\" className=\"calculator-key key-9\" onClick={handleClick}>9</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"operator-keys\">\r\n                    <button id=\"key-divide\" value=\"/\" className=\"calculator-key calc-key key-divide\" onClick={handleClick}>&divide;</button>\r\n                    <button id=\"key-multiply\" value=\"*\" className=\"calculator-key calc-key key-multiply\" onClick={handleClick}>&times;</button>\r\n                    <button id=\"key-subtract\" value=\"-\" className=\"calculator-key calc-key key-subtract\" onClick={handleClick}>&ndash;</button>\r\n                    <button id=\"key-add\" value=\"+\" className=\"calculator-key calc-key key-add\" onClick={handleClick}>+</button>\r\n                    <button id=\"key-equals\" value=\"=\" className=\"calculator-key calc-key key-equals\" onClick={handleClick}>=</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\nimport './App.css';\nimport Calculator from './components/Calculator';\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <div id=\"wrapper\">\n        <div id=\"calculator-wrapper\">\n          <Calculator />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}